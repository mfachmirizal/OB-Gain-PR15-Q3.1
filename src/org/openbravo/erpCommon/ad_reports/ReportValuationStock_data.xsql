<?xml version="1.0" encoding="UTF-8" ?>
<!--
 *************************************************************************
 * The contents of this file are subject to the Openbravo  Public  License
 * Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
 * Version 1.1  with a permitted attribution clause; you may not  use this
 * file except in compliance with the License. You  may  obtain  a copy of
 * the License at http://www.openbravo.com/legal/license.html 
 * Software distributed under the License  is  distributed  on  an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific  language  governing  rights  and  limitations
 * under the License. 
 * The Original Code is Openbravo ERP. 
 * The Initial Developer of the Original Code is Openbravo SLU 
 * All portions are Copyright (C) 2001-2014 Openbravo SLU 
 * All Rights Reserved. 
 * Contributor(s):  ______________________________________.
 ************************************************************************
-->





<SqlClass name="ReportValuationStockData" package="org.openbravo.erpCommon.ad_reports">
  <SqlClassComment></SqlClassComment>
  <SqlMethod name="select" type="preparedStatement" return="multiple">
    <SqlMethodComment></SqlMethodComment>
    <Sql>
    <![CDATA[
        SELECT M_PRODUCT_CATEGORY.NAME AS CATEGORY_NAME, ZZ.M_PRODUCT_ID, AD_COLUMN_IDENTIFIER (to_char('M_Product'),to_char(ZZ.M_PRODUCT_ID),to_char(?)) AS PRODUCT_NAME, SUM(M.MOVEMENTQTY) AS QTY, UOM_NAME, 
            CASE ZZ.ISCOSTCALCULATED
                       WHEN 'Y' THEN SUM(TOTAL_COST) / SUM(M.MOVEMENTQTY)
                       ELSE NULL
                     END AS AVERAGE_COST,
               SUM(TOTAL_COST) AS TOTAL_COST
        FROM M_TRANSACTION M
        INNER JOIN (SELECT M_PRODUCT.M_PRODUCT_CATEGORY_ID, A.M_PRODUCT_ID, 
                C_UOM.NAME AS UOM_NAME, SUM(A.SUMA) AS TOTAL_COST, A.ISCOSTCALCULATED, A.AD_CLIENT_ID, A.C_CURRENCY_ID, A.M_TRANSACTION_ID
             FROM M_TRANSACTION TR 
             LEFT JOIN (SELECT TRX.M_TRANSACTION_ID, TRX.M_PRODUCT_ID, 
                   CASE TRX.ISCOSTCALCULATED
                       WHEN 'Y' THEN C_CURRENCY_CONVERT_PRECISION (SUM(CASE WHEN TRX.MOVEMENTQTY < 0 THEN - TC.TRXCOST ELSE TC.TRXCOST END),TC.C_CURRENCY_ID,?,TC.MOVEMENTDATE,NULL,TRX.AD_CLIENT_ID,?,'C')
                       ELSE NULL
                     END AS SUMA,
                   TRX.C_UOM_ID, TRX.AD_CLIENT_ID, TRX.ISCOSTCALCULATED, TC.C_CURRENCY_ID
                 FROM M_TRANSACTION TRX 
                     JOIN M_LOCATOR L ON TRX.M_LOCATOR_ID = L.M_LOCATOR_ID
                     LEFT JOIN (SELECT SUM(COST) AS TRXCOST, M_TRANSACTION_ID, C_CURRENCY_ID, COALESCE(DATEACCT, COSTDATE) as MOVEMENTDATE
                                FROM M_TRANSACTION_COST
                                WHERE COALESCE(DATEACCT, COSTDATE) < to_date(?)
                                GROUP BY m_transaction_id, C_CURRENCY_ID, COALESCE(DATEACCT, COSTDATE)) TC ON TRX.M_TRANSACTION_ID = TC.M_TRANSACTION_ID
                 WHERE TRX.MOVEMENTDATE < to_date(?)
                 AND L.M_WAREHOUSE_ID = ?
                 GROUP BY TRX.M_TRANSACTION_ID, TRX.M_PRODUCT_ID, TRX.C_UOM_ID, TRX.AD_CLIENT_ID, TRX.ISCOSTCALCULATED, TC.C_CURRENCY_ID, TC.MOVEMENTDATE) A ON TR.M_TRANSACTION_ID = A.M_TRANSACTION_ID,
                C_UOM,
                M_PRODUCT
            WHERE A.M_PRODUCT_ID = M_PRODUCT.M_PRODUCT_ID
            AND   A.C_UOM_ID = C_UOM.C_UOM_ID            
            AND   1 = 1
            AND  ( A.SUMA <> 0 OR TR.MOVEMENTQTY <> 0)
          GROUP BY M_PRODUCT.M_PRODUCT_CATEGORY_ID, A.M_PRODUCT_ID, C_UOM.NAME, A.ISCOSTCALCULATED, A.AD_CLIENT_ID, A.C_CURRENCY_ID, A.M_TRANSACTION_ID) ZZ
        ON M.M_TRANSACTION_ID = ZZ.M_TRANSACTION_ID, M_PRODUCT_CATEGORY
        where M_PRODUCT_CATEGORY.M_PRODUCT_CATEGORY_id = zz.M_PRODUCT_CATEGORY_id
        GROUP BY ZZ.M_PRODUCT_ID, M_PRODUCT_CATEGORY.NAME, UOM_NAME, ZZ.ISCOSTCALCULATED
        HAVING SUM(M.MOVEMENTQTY) <>0
        ORDER BY M_PRODUCT_CATEGORY.NAME, PRODUCT_NAME    
     ]]></Sql>
      <Field name="rownum" value="count"/>
      <Parameter name="adLanguage"/>
      <Parameter name="cCurrencyConv"/>
      <Parameter name="legalEntity"/>
      <Parameter name="datePlus"/>
      <Parameter name="datePlus"/>
      <Parameter name="warehouse"/>
      <Parameter name="categoryProduct" optional="true" after="AND   1 = 1"><![CDATA[ AND M_PRODUCT.M_PRODUCT_CATEGORY_ID= ? ]]></Parameter>
  </SqlMethod>
  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment></SqlMethodComment>
      <Sql></Sql>
  </SqlMethod>
</SqlClass>
